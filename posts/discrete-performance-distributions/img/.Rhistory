}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
name <- "orchard-AllAssembliesCount"
df <- extract(name)
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
df$Value <- round(df$Value)
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
df$Value <- as.integer(df$Value)
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
xlab("Duration, ms")
ggplot(data.frame(x = rep(10, 100)), aes(x)) + geom_histogram(binwidth = 1)
ggplot(data.frame(x = rep(70, 100)), aes(x)) + geom_histogram(binwidth = 1)
ggplot(data.frame(x = rep(72, 100)), aes(x)) + geom_histogram(binwidth = 1)
ggplot(data.frame(x = rep(72, 320)), aes(x)) + geom_histogram(binwidth = 1)
table(df$Value)
ggplot(data.frame(x = rep(72, 837)), aes(x)) + geom_histogram(binwidth = 1)
ggplot(data.frame(x = rep(72, 837)), aes(x)) + geom_histogram(binwidth = 1, size = 0.5)
ggplot(data.frame(x = rep(72, 837)), aes(x)) + geom_histogram(binwidth = 1, size = 0.5) + scale_y_continuous(expand = c(0, 0))
ggplot(df, aes(Value)) +
geom_histogram(fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(fill = "transparent", col = cbGreen, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(fill = "transparent", col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, fill = "transparent", col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(df$Value) + 1)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
max(df$Value) + 1
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 2)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
library(effsize)
library(Hmisc)
library(tidyr)
library(ggplot2)
library(ggdark)
library(svglite)
library(latex2exp)
library(knitr)
library(EnvStats)
library(dplyr)
library(DiscreteWeibull)
cbRed <- "#D55E00"; cbBlue <- "#56B4E9"; cbGreen <- "#009E73"; cbOrange <- "#E69F00"
cbNavy <- "#0072B2"; cbPink <- "#CC79A7"; cbYellow <- "#F0E442"; cbGrey <- "#999999"
cbPalette <- c(cbRed, cbBlue, cbGreen, cbOrange, cbNavy, cbPink, cbYellow, cbGrey)
ggsave_nice <- function(name, plot = last_plot(), tm = theme_bw(), dark_and_light = T, ext = "png", dpi = 300) {
width <- 1600 / dpi
height <- 900 / dpi
if (dark_and_light) {
old_theme <- theme_set(tm)
ggsave(paste0(name, "-light.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(dark_mode(tm, verbose = FALSE))
ggsave(paste0(name, "-dark.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
invert_geom_defaults()
} else {
old_theme <- theme_set(tm)
ggsave(paste0(name, ".", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
}
}
options(width = 80)
extract <- function(name) {
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df <- df %>% filter(Platform == "Mac OS X")
df
}
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 1, col = cbBlue) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 2)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 1))
}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
process("findusages-total")
name <- "findusages-total"
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 1, col = cbBlue) +
ylab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 2)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 100)) +
scale_x_continuous(limits = c(0, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 100)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 2)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
library(effsize)
library(Hmisc)
library(tidyr)
library(ggplot2)
library(ggdark)
library(svglite)
library(latex2exp)
library(knitr)
library(EnvStats)
library(dplyr)
library(DiscreteWeibull)
cbRed <- "#D55E00"; cbBlue <- "#56B4E9"; cbGreen <- "#009E73"; cbOrange <- "#E69F00"
cbNavy <- "#0072B2"; cbPink <- "#CC79A7"; cbYellow <- "#F0E442"; cbGrey <- "#999999"
cbPalette <- c(cbRed, cbBlue, cbGreen, cbOrange, cbNavy, cbPink, cbYellow, cbGrey)
ggsave_nice <- function(name, plot = last_plot(), tm = theme_bw(), dark_and_light = T, ext = "png", dpi = 300) {
width <- 1600 / dpi
height <- 900 / dpi
if (dark_and_light) {
old_theme <- theme_set(tm)
ggsave(paste0(name, "-light.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(dark_mode(tm, verbose = FALSE))
ggsave(paste0(name, "-dark.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
invert_geom_defaults()
} else {
old_theme <- theme_set(tm)
ggsave(paste0(name, ".", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
}
}
options(width = 80)
extract <- function(name) {
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df <- df %>% filter(Platform == "Mac OS X")
df
}
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 1, col = cbBlue) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 1))
}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
library(effsize)
library(Hmisc)
library(tidyr)
library(ggplot2)
library(ggdark)
library(svglite)
library(latex2exp)
library(knitr)
library(EnvStats)
library(dplyr)
library(DiscreteWeibull)
cbRed <- "#D55E00"; cbBlue <- "#56B4E9"; cbGreen <- "#009E73"; cbOrange <- "#E69F00"
cbNavy <- "#0072B2"; cbPink <- "#CC79A7"; cbYellow <- "#F0E442"; cbGrey <- "#999999"
cbPalette <- c(cbRed, cbBlue, cbGreen, cbOrange, cbNavy, cbPink, cbYellow, cbGrey)
ggsave_nice <- function(name, plot = last_plot(), tm = theme_bw(), dark_and_light = T, ext = "png", dpi = 300) {
width <- 1600 / dpi
height <- 900 / dpi
if (dark_and_light) {
old_theme <- theme_set(tm)
ggsave(paste0(name, "-light.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(dark_mode(tm, verbose = FALSE))
ggsave(paste0(name, "-dark.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
invert_geom_defaults()
} else {
old_theme <- theme_set(tm)
ggsave(paste0(name, ".", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
}
}
options(width = 80)
extract <- function(name) {
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df <- df %>% filter(Platform == "Mac OS X")
df
}
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 1))
}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
library(effsize)
library(Hmisc)
library(tidyr)
library(ggplot2)
library(ggdark)
library(svglite)
library(latex2exp)
library(knitr)
library(EnvStats)
library(dplyr)
library(DiscreteWeibull)
cbRed <- "#D55E00"; cbBlue <- "#56B4E9"; cbGreen <- "#009E73"; cbOrange <- "#E69F00"
cbNavy <- "#0072B2"; cbPink <- "#CC79A7"; cbYellow <- "#F0E442"; cbGrey <- "#999999"
cbPalette <- c(cbRed, cbBlue, cbGreen, cbOrange, cbNavy, cbPink, cbYellow, cbGrey)
ggsave_nice <- function(name, plot = last_plot(), tm = theme_bw(), dark_and_light = T, ext = "png", dpi = 300) {
width <- 1600 / dpi
height <- 900 / dpi
if (dark_and_light) {
old_theme <- theme_set(tm)
ggsave(paste0(name, "-light.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(dark_mode(tm, verbose = FALSE))
ggsave(paste0(name, "-dark.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
invert_geom_defaults()
} else {
old_theme <- theme_set(tm)
ggsave(paste0(name, ".", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
}
}
options(width = 80)
extract <- function(name) {
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df <- df %>% filter(Platform == "Mac OS X")
df
}
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 1))
}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
name <- "startup-final-footprint"
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
df$Value <- round(df$Value / 1024 / 1024)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
v
df <- df %>% filter(Platform == "Linux")
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
df$Value <- round(df$Value / 1024 / 1024)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
library(ggplot2)
PLATFORM <- "Windows 10" # Linux, Mac OS X, Windows 10
df <- read.csv("amCharts.csv")
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df$AgentName <- factor(df$AgentName, levels = sort(as.vector(unique(df$AgentName))))
if (PLATFORM != "")
df <- df[df$Platform == PLATFORM,]
ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
geom_point() +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
library(ggplot2)
PLATFORM <- "Windows 10" # Linux, Mac OS X, Windows 10
df <- read.csv("/Users/akinshin/Downloads/amCharts.csv")
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df$AgentName <- factor(df$AgentName, levels = sort(as.vector(unique(df$AgentName))))
if (PLATFORM != "")
df <- df[df$Platform == PLATFORM,]
ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
geom_point() +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
library(ggplot2)
PLATFORM <- "Windows 10" # Linux, Mac OS X, Windows 10
df <- read.csv("/Users/akinshin/Downloads/amCharts.csv")
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df$AgentName <- factor(df$AgentName, levels = sort(as.vector(unique(df$AgentName))))
if (PLATFORM != "")
df <- df[df$Platform == PLATFORM,]
ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
geom_density(bw = "SJ") +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
ggplot(df, aes(x = Value, col = AgentName)) +
geom_density(bw = "SJ") +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
library(ggplot2)
PLATFORM <- "" # Linux, Mac OS X, Windows 10
df <- read.csv("/Users/akinshin/Downloads/amCharts.csv")
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df$AgentName <- factor(df$AgentName, levels = sort(as.vector(unique(df$AgentName))))
if (PLATFORM != "")
df <- df[df$Platform == PLATFORM,]
# ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
#   geom_point() +
#   labs(y = "Duration (ms)") +
#   scale_y_continuous(breaks = seq(0, 120, by = 5))
ggplot(df, aes(x = Value, col = AgentName)) +
geom_density(bw = "SJ") +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
library(ggplot2)
PLATFORM <- "Linux" # Linux, Mac OS X, Windows 10
df <- read.csv("/Users/akinshin/Downloads/amCharts.csv")
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df$AgentName <- factor(df$AgentName, levels = sort(as.vector(unique(df$AgentName))))
if (PLATFORM != "")
df <- df[df$Platform == PLATFORM,]
# ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
#   geom_point() +
#   labs(y = "Duration (ms)") +
#   scale_y_continuous(breaks = seq(0, 120, by = 5))
ggplot(df, aes(x = Value, col = AgentName)) +
geom_density(bw = "SJ") +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
ggplot(df, aes(x = Date, y = Value, col = AgentName)) +
geom_point() +
labs(y = "Duration (ms)") +
scale_y_continuous(breaks = seq(0, 120, by = 5))
process("findusages-total")
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 2))
}
process("findusages-total")
library(effsize)
library(Hmisc)
library(tidyr)
library(ggplot2)
library(ggdark)
library(svglite)
library(latex2exp)
library(knitr)
library(EnvStats)
library(dplyr)
library(DiscreteWeibull)
cbRed <- "#D55E00"; cbBlue <- "#56B4E9"; cbGreen <- "#009E73"; cbOrange <- "#E69F00"
cbNavy <- "#0072B2"; cbPink <- "#CC79A7"; cbYellow <- "#F0E442"; cbGrey <- "#999999"
cbPalette <- c(cbRed, cbBlue, cbGreen, cbOrange, cbNavy, cbPink, cbYellow, cbGrey)
ggsave_nice <- function(name, plot = last_plot(), tm = theme_bw(), dark_and_light = T, ext = "png", dpi = 300) {
width <- 1600 / dpi
height <- 900 / dpi
if (dark_and_light) {
old_theme <- theme_set(tm)
ggsave(paste0(name, "-light.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(dark_mode(tm, verbose = FALSE))
ggsave(paste0(name, "-dark.", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
invert_geom_defaults()
} else {
old_theme <- theme_set(tm)
ggsave(paste0(name, ".", ext), plot, width = width, height = height, dpi = dpi)
theme_set(old_theme)
}
}
options(width = 80)
extract <- function(name) {
df <- read.csv(paste0(name, ".csv"))
df$Date <- as.POSIXct(df$Timestamp, "%YYYY-%mm-%dd %HH:%MM:%SS")
df <- df %>% filter(Platform == "Mac OS X")
df
}
process <- function(name, df = NULL) {
if (is.null(df))
df <- extract(name)
ggplot(df, aes(Date, Value)) +
geom_point(size = 0.5, col = cbBlue) +
scale_y_continuous(limits = c(0, NA)) +
ylab("Duration, ms")
ggsave_nice(paste0(name, "-timeline"))
ggplot(df, aes(Value)) +
geom_histogram(binwidth = 1, col = cbGreen, fill = cbGrey, size = 0.5) +
scale_y_continuous(expand = c(0, 0), limits = c(0, max(table(df$Value)) + 1)) +
scale_x_continuous(limits = c(-0.5, NA)) +
xlab("Duration, ms")
ggsave_nice(paste0(name, "-hist"))
x <- df$Value
show(table(x))
show(round(table(x) / length(x) * 100, 2))
}
process("findusages-total")
process("startup-base_LaF_creation")
process("orchard-AllAssembliesCount")
