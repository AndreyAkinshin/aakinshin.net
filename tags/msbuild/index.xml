<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MSBuild on Andrey Akinshin</title><link>https://aakinshin.net/tags/msbuild/</link><description>Recent content in MSBuild on Andrey Akinshin</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 08 Feb 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://aakinshin.net/tags/msbuild/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting up build configuration in .NET</title><link>https://aakinshin.net/posts/msbuild-configurations/</link><pubDate>Sat, 08 Feb 2014 00:00:00 +0000</pubDate><guid>https://aakinshin.net/posts/msbuild-configurations/</guid><description>&lt;p>You get two default build configurations: Debug and Release, when creating a new project in Visual Studio. And it’s enough for most small projects. But there can appear a necessity to extend it with the additional configurations. It’s ok if you need to add just a couple of new settings, but what if there are tens of such settings? And what if your solution contains 20 projects that need setting up of these configurations? In this case it becomes quite difficult to manage and modify build parameters.&lt;/p>
&lt;p>In this article, we will review a way to make this process simpler by reducing description of the build configurations.&lt;/p></description></item></channel></rss>