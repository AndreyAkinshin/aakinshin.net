<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BinarySearch on Андрей Акиньшин</title><link>https://aakinshin.net/ru/tags/binarysearch/</link><description>Recent content in BinarySearch on Андрей Акиньшин</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Wed, 20 Nov 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://aakinshin.net/ru/tags/binarysearch/index.xml" rel="self" type="application/rss+xml"/><item><title>Cache-Conscious Binary Search</title><link>https://aakinshin.net/ru/posts/cache-conscious-binary-search/</link><pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate><guid>https://aakinshin.net/ru/posts/cache-conscious-binary-search/</guid><description>&lt;p>
	Рассмотрим простую задачу: есть некоторый достаточно большой неизменный набор чисел, к нему осуществляется множество запросов на наличие некоторого числа в этом наборе, необходимо максимально быстро эти запросы обрабатывать. Одно из классических решений заключается в формировании отсортированного массива и обработке запросов через бинарный поиск. Но можно ли добиться более высокой производительности, чем в классической реализации? В этой статье мне хотелось бы рассказать про Cache-Conscious Binary Search. В данном алгоритме предлагается переупорядочить элементы массива таким образом, чтобы использование кэша процессора происходило максимально эффективно.
&lt;/p></description></item></channel></rss>